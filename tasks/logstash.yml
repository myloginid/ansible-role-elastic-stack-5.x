---

- name: Installing HAVEGE (Increases entropy for faster startups)
  apt:
    name: haveged
    state: present
  become: yes

- name: installing logstash with version defined
  apt:
    name: "logstash=1:{{ ls_version }}-1"
    state: present
    force: yes
  become: yes
  when: ls_version is defined and ls_version
  tags:
    - logstash

- name: installing logstash without version defined (default latest)
  apt:
    name: logstash
    state: latest
    force: yes
  become: yes
  when: ls_version is undefined or not ls_version
  tags:
    - logstash

- name: creating logstash paths
  file:
    path: "{{ item }}"
    state: directory
    owner: logstash
    group: logstash
  with_items:
    - "{{ ls_yml['path.base'] }}"
    - "{{ ls_yml['path.data'] }}"
    - "{{ ls_yml['path.config'] }}"
    - "{{ ls_yml['path.logs'] }}"
    - "{{ ls_yml['path.index_templates'] }}"
  become: yes
  tags:
    - logstash

- name: configuring logstash
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: yes
    owner: logstash
    group: logstash
    mode: 0644
  with_items:
    - src: logstash/logstash.yml.j2
      dest: /etc/logstash/logstash.yml
    - src: logstash/jvm.options.j2
      dest: /etc/logstash/jvm.options
    - src: logstash/log4j2.properties.j2
      dest: /etc/logstash/log4j2.properties
    - src: logstash/startup.options.j2
      dest: /etc/logstash/startup.options
  become: yes
  tags:
    - logstash

- name: Get currently installed Logstash plugins
  command: ./bin/logstash-plugin list
  args:
    chdir: /usr/share/logstash
  register: ls_installed_plugins
  become: yes
  when: ls_install_plugins | bool

- name: Upgrade existing plugins
  command: "./bin/logstash-plugin update {{ item }}"
  args:
    chdir: /usr/share/logstash
  with_items: "{{ ls_plugins }}"
  when: (ls_install_plugins | bool) and item in ls_installed_plugins.stdout_lines
  become: yes
  environment: "{{ proxy_environment_variables }}"

- name: Install new Logstash plugins
  command: "./bin/logstash-plugin install {{ item }}"
  args:
    chdir: /usr/share/logstash
  with_items: "{{ ls_plugins }}"
  become: yes
  when: (ls_install_plugins | bool) and item not in ls_installed_plugins.stdout_lines
  environment: "{{ proxy_environment_variables }}"

- name: Create geodb directory
  file:
    path: "{{ ls_yml['path.geodb'] }}"
    state: directory
    owner: logstash
    group: logstash
    mode: 0755
  become: yes
  when: ls_install_geoip | bool

- name: Check if GeoIP db missing
  stat:
    path: "{{ ls_yml['path.geodb'] }}/GeoLite2-City.mmdb"
  register: geo_db_stat
  become: yes

- name: Download GeoIP database files
  get_url:
    url: "{{ item }}"
    dest: "{{ ls_yml['path.geodb'] }}"
    owner: logstash
    group: logstash
    force: yes
  with_items:
    - "http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz"
  become: yes
  when: (ls_install_geoip | bool) and not geo_db_stat.stat.exists

- name: Unarchive GeoLite2-City.mmdb.gz if present
  command: gunzip "{{ ls_yml['path.geodb'] }}/GeoLite2-City.mmdb.gz"
  become: yes
  become_user: logstash
  when: (ls_install_geoip | bool) and not geo_db_stat.stat.exists

- name: Install GeoDB autoupdate
  include: geoip-update.yml
  when: (ls_install_geoip | bool)

- name: copying user supplied confd templates
  template:
    src: "{{ item }}"
    dest: "{{ ls_yml['path.config'] }}/{{ item.split('/')[-1][:-3] }}"
    owner: logstash
    group: logstash
  with_fileglob: "{{ ls_confd_files }}"
  become: yes
  tags:
    - logstash

- name: copying user supplied index templates
  template:
    src: "{{ item }}"
    dest: "{{ ls_yml['path.index_templates'] }}/{{ item.split('/')[-1][:-3] }}"
    owner: logstash
    group: logstash
  with_fileglob: "{{ ls_index_template_files }}"
  become: yes
  tags:
    - logstash

- name: copying user supplied provisonal files
  copy:
    src: "{{ item }}"
    dest: "{{ ls_yml['path.base'] }}"
    owner: logstash
    group: logstash
  with_items: "{{ ls_provisional_files }}"
  become: yes
  tags:
    - logstash

- name: generating startup script
  command: /usr/share/logstash/bin/system-install
  become: yes
  become_user: logstash

- name: starting logstash
  service:
    name: logstash
    state: restarted
    enabled: yes
  become: yes
  tags:
    - logstash
